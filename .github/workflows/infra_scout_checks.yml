# GitHub Workflow to execute test cases via Scout Suite

name: "Scout Suite Checks"

# Run when PR against main comes through with infracode/testcode changes
on:
  pull_request:
    branches:
      - main
    paths:
      - "infracode/**"
      - "testcode/**"
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:


jobs:
  execute:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install Graphviz
        run: "sudo apt-get install -y jq"
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Init Terraform
        run: | 
          cd $GITHUB_WORKSPACE/infracode
          terraform init
      - name: Validate Config
        run: |
          cd $GITHUB_WORKSPACE/infracode
          terraform validate -no-color
      - name: Setup LocalStack
        run: |
          echo "Install LocalStack, AWS CLI, Scout Suite via pip"
          pip install localstack scoutsuite mitmproxy
          echo "Pull localstack/localstack from Docker"
          docker pull localstack/localstack
          echo "Start LocalStack"
          localstack start -d
          echo "Wait for LocalStack"
          localstack wait -t 30
          echo "LocalStack running"
      - name: Deploy Infra Code
        run: |
          cd $GITHUB_WORKSPACE/infracode
          terraform apply -auto-approve -var "acctid=000000000000"
      - name: Make Artifacts Directory
        run: |
          mkdir -p /tmp/artifacts
      - name: Launch Mitmproxy
        run: |
          nohup mitmdump --listen-host 127.0.0.1 --listen-port 8080 -s $GITHUB_WORKSPACE/mitmproxy/proxy_aws_to_localstack.py -k --quiet &
          disown
      - name: Create Scout Suite Output
        env:
          AWS_ACCESS_KEY_ID: AKIAFAKEFAKEFAKE
          AWS_SECRET_ACCESS_KEY: alsofakejustmakesthingswork
          AWS_DEFAULT_REGION: us-east-1
          AWS_REGION: us-east-1
          HTTP_PROXY: http://127.0.0.1:8080
          HTTPS_PROXY: http://127.0.0.1:8080
          AWS_CA_BUNDLE: ~/.mitmproxy/mitmproxy-ca-cert.pem
        run: |
          echo $(scout aws --services ec2 vpc iam s3 --report-dir /tmp/artifacts/scout-dir --no-browser)
      - name: Execute Scout Suite Test Cases
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE/testcode
          echo $((python -m unittest -v test_scoutsuite_rails.py) 2> results.txt)
          cat results.txt
          echo -e 'Scout Suite Test Results:\n\n```' > header.txt
          echo -e '\n```' > footer.txt
          cat header.txt results.txt footer.txt > full_output.txt
          jq -Rs '{ body: . }' full_output.txt > json_output.txt
        id: scouttests
      - name: Update PR
        if: ${{ github.event_name == 'pull_request' }}
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          curl -X POST \
          --user ${{ github.actor }}:$GITHUB_TOKEN \
          -H 'Accept: application/vnd.github.v3+json' \
          --data "@$GITHUB_WORKSPACE/testcode/json_output.txt" \
          "$GITHUB_API_URL/repos/$GITHUB_REPOSITORY/issues/${{ github.event.pull_request.number }}/comments"

      - name: Process Test Results
        run: |
          cd $GITHUB_WORKSPACE/testcode
          python -c 'import sys; sys.exit(1) if "FAILED" in open("results.txt").read() else sys.exit(0)'
